slug: build-a-bolt-inventory-file-on-linux
id: yt7oz8p7uzhp
type: track
title: Build a Bolt Inventory File on Linux
teaser: Save time by running tasks across groups of targets.
description: |-
  ## Introduction

  The Bolt inventory file (inventory.yaml) enables you to simplify how you manage a large number of target nodes, or *targets*. You can define groups of targets in this file and then reference the group — instead of a list of individual targets — in Bolt commands. You can also define connection settings and store information about the targets.

  For example, suppose you need to run a Network Time Protocol (NTP) configuration script on the Linux targets in your environment. In the `inventory.yaml` file, you can define a group named **linux**, and then run the script against that group to update all the targets at once instead of syncing them one at a time or providing all the target names in the Bolt command that invokes the script.

  You can use Bolt to make ad hoc changes to targets by including target names when you run commands. This might be easy for managing a handful of targets, but imagine if you have to change 50, 500, or even 5000 targets!

  By defining groups of targets (and other information such as connection parameters) in the `inventory.yaml` file, you can simplify your Bolt commands and ensure that commands run against the correct targets each time.

  In this lab, you will:

   - Build an inventory file and assign targets to a group that you can run commands and scripts against.
   - Run the `ntpdate` command to synchronize the date and time on the targets defined in the group.
   - Build a script that synchronizes the system clock and starts the NTP service on the targets in the group.

  ## Prerequisites
   - Basic familiarity with [Bolt](https://puppet.com/open-source/bolt/)
     - If you're brand-new to Bolt, start with the [Bolt Basics on Linux](https://play.instruqt.com/puppet/invite/jpbxwmbt8hdx) track.
   - Familiarity with [shell scripting](https://en.wikipedia.org/wiki/Shell_script)
   - Familiarity with [YAML](https://en.wikipedia.org/wiki/YAML)

  ## Technical recommendations

  For the best lab experience, use [Google Chrome](https://www.google.com/chrome/). Mozilla Firefox, Microsoft Edge, and Apple Safari are not suitable for this lab — if you must use one of these browsers, see the [Lab Help Guide](https://puppet-kmo.gitbook.io/practice-lab-help/) for workarounds.

  ## Keep an eye on the clock

  ![20 minute lab](https://storage.googleapis.com/instruqt-images/Clocks%20for%20Track%20Duration/20min100.png) The virtual learning environment will stay up for 30 minutes, however, **this lab should only take about 20 minutes** to complete. When your learning environment expires, your work will not be saved. If you haven't completed the lab, you can simply restart it.

  When you're ready to begin, click **Start track**. When you've completed the lab, click **Stop** (appears at the top of this page after the lab starts).

  Want to try these steps in your own environment? Check out the [job aid](https://puppet-kmo.gitbook.io/job-aids/bolt/build-a-bolt-inventory-file-on-linux).
icon: https://storage.googleapis.com/instruqt-images/bolt-logo-icon.png
tags:
- ""
- BACKUP
- BOLT
owner: puppet
developers:
- greg.larkin@puppet.com
- tara.swenson@puppet.com
private: true
published: true
show_timer: true
skipping_enabled: true
checksum: "9244109667797285597"
